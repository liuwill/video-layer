<!DOCTYPE html>
<html>

<head>
  <% for (var chunk in htmlWebpackPlugin.files.css) { %>
    <link rel="preload" href="<%= htmlWebpackPlugin.files.css[chunk] %>" as="style">
  <% } %>
  <% for (var chunk in htmlWebpackPlugin.files.chunks) { %>
    <link rel="preload" href="<%= htmlWebpackPlugin.files.chunks[chunk].entry %>" as="script">
  <% } %>
  <meta charset="utf-8">
  <title>preact-boilerplate</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0, minimal-ui">
  <meta name="description" content="preact-boilerplate">
  <meta name="msapplication-TileColor" content="#673ab8">
  <meta name="msapplication-TileImage" content="./assets/icons/mstile-150x150.png">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
  <meta name="apple-mobile-web-app-title" content="preact-boilerplate">
  <meta name="application-name" content="preact-boilerplate">
  <meta name="format-detection" content="telephone=no">
  <meta name="theme-color" content="#673ab8">
  <link rel="apple-touch-icon" sizes="180x180" href="./assets/icons/apple-touch-icon.png">
  <link rel="icon" type="image/png" href="/assets/icons/favicon-32x32.png" sizes="32x32">
  <link rel="icon" type="image/png" href="/assets/icons/favicon-16x16.png" sizes="16x16">

  <!-- <link href="/assets/video.js/video-js.min.css" rel="stylesheet">
  <script src="/assets/video.js/video.min.js"></script> -->
  <link href="/assets/style/demo.css" rel="stylesheet" type="text/css" charset="utf-8">
  <link rel="manifest" href="./manifest.json">
</head>

<body>
  <div class="demo-main">
    <div class="demo-header">

    </div>
    <div class="demo-container">
      <div class="play-board">
        <div class="main-board dark without__border-radius" id="main-board">
          <video id="demoVideoPlayer" src="//static.techartisan.cn/midea/videos/quanqiufengbao_854x480.mp4" class="demo-video" ></video>
          <!-- <video
            id="my-player"
            class="video-js demo-video"
            controls
            preload="auto"
            poster="//static.techartisan.cn/midea/covers/quanqiufengbao_cover.jpeg"
            data-setup='{}'>
            <source src="//static.techartisan.cn/midea/videos/quanqiufengbao_854x480.mp4" type="video/mp4"></source>
            <p class="vjs-no-js">
              To view this video please enable JavaScript, and consider upgrading to a
              web browser that
              <a href="http://videojs.com/html5-video-support/" target="_blank">
                supports HTML5 video
              </a>
            </p>
          </video> -->
          <img id="demoVideoCover" src="//static.techartisan.cn/midea/covers/quanqiufengbao_cover.jpeg" class="demo-video" />
          <div id="demoVideoCtrl" class="play-ctrl" style="z-index:1">
            <span class="demo-play-btn">
              <span class="demo-icon demo-play-icon">⏏</span>
              <span class="demo-icon demo-stop-icon hidden">=</span>
            </span>
          </div>
        </div>

        <div class="side-board">
        </div>
      </div>

      <div class="config-container">
        <div class="config-panel query-form">
          <div class="config-line query-line">
            <input class="config-input query-input" placeholder="输入游戏服务器" />
          </div>

          <div class="config-line query-line">
            <input class="config-input query-input" placeholder="输入游戏ID" />
          </div>

          <div class="form-line">
            <button class="config-button light">加入游戏</button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <script>
    (function () {
      function loadDebugger() {
        var src = '/assets/eruda/eruda.min.js'
        if (!/debug=true/.test(window.location) && localStorage.getItem('active-eruda') != 'true') return
        var scriptDom = document.createElement('script')
        scriptDom.setAttribute('src', src)

        document.body.appendChild(scriptDom)
        scriptDom.onload = function () {
          var initDom = document.createElement('script')
          initDom.innerHTML = 'var el = document.createElement("div");document.body.appendChild(el);eruda.init({container: el});'
          document.body.appendChild(initDom)
        }
      }

      function parseQuery(url) {
        var queryParams = {}
        var pos = url.indexOf('?')
        if(pos < 0) {
          return queryParams
        }

        var queryStr = url.substr(pos + 1)
        if(!queryStr.length) {
          return queryParams
        }

        var params = queryStr.split('&')
        for(var i = 0; i < params.length; i++) {
          var metaData = params[i].split('=')
          queryParams[metaData[0]] = metaData[1]
        }

        return queryParams
      }

      function removeClass(domElement, className) {
        var rawClassName = domElement.className
        var clsList = rawClassName.split(" ")

        domElement.className = ""
        for (var i in clsList) {
          if (!clsList[i] || clsList[i] == className) {
            continue
          }
          domElement.className += " " + clsList[i]
        }
      }
      function addClass(domElement, className) {
        var rawClassName = domElement.className
        domElement.className = rawClassName + " " + className
      }

      function VideoCtrl() {
        this.ctrlDom = document.querySelector("#demoVideoCtrl")
        this.videoDom = document.querySelector("#demoVideoPlayer")
        this.coverDom = document.querySelector("#demoVideoCover")

        this.playIcon = document.querySelector(".demo-play-icon")
        this.stopIcon = document.querySelector(".demo-stop-icon")
        this.playing = false

        this.play = function () {
          this.videoDom.play()
          this.playing = true

          addClass(this.coverDom, "hidden")
          addClass(this.playIcon, "hidden")
          removeClass(this.stopIcon, "hidden")
        }
        this.stop = function () {
          this.videoDom.pause()
          this.playEnd()
        }
        this.playEnd = function () {
          this.playing = false
          removeClass(this.coverDom, "hidden")
          removeClass(this.playIcon, "hidden")
          addClass(this.stopIcon, "hidden")
        }

        this.bootstrap = function () {
          var that = this
          this.ctrlDom.onclick = function () {
            if (that.playing) {
              that.stop()
            } else {
              that.play()
            }
          }

          this.videoDom.addEventListener("ended", function () {
            that.playEnd()
          })
        }
      }

      function GameApp() {
        this.init()
      }

      GameApp.prototype.init = function () {
        var queryInputs = document.querySelectorAll('.query-input')
        for (var i = 0; i < queryInputs.length; i++) {
          var queryInput = queryInputs[i]

          queryInput.addEventListener('focus', function (e) {
            addClass(e.target.parentNode, 'focus')
          }, true)
          queryInput.addEventListener('blur', function (e) {
            removeClass(e.target.parentNode, 'focus')
          }, true)
        }
      }

      window.onload = function () {
        var queryParams = parseQuery(window.location.href)

        console.log(queryParams)
        if (window.initPlayBoard) {
          window.__MAIN_APP__ = initPlayBoard('#main-board', queryParams)
        }
        console.log('loading')

        var videoCtrl = new VideoCtrl()
        videoCtrl.bootstrap()

        var gameApp = new GameApp()

        window.__GAME_APP__ = gameApp
        window.__VIDEO_CTRL__ = videoCtrl

        loadDebugger()
      }
    })()
  </script>
</body>

</html>
